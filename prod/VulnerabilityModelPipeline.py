import pandas as pd
from prod.VulnerabilityModelTrainer import VulnerabilityModelTrainer

class VulnerabilityModelPipeline:
    def __init__(self,
                 data_path="../training_data/training_data.csv",
                 model_severity_path="../model/severity_model.pkl",
                 model_confidence_path="../model/confidence_model.pkl",
                 scaler_path="../model/scaler.pkl"):
        """
        Initializes the training pipeline for vulnerability severity and confidence prediction.

        :param data_path: Path to the CSV file with features and 'severity', 'confidence' targets.
        :param model_severity_path: Path to save the trained severity model.
        :param model_confidence_path: Path to save the trained confidence model.
        :param scaler_path: Path to save the fitted feature scaler.
        """
        self.data_path = data_path
        self.model_severity_path = model_severity_path
        self.model_confidence_path = model_confidence_path
        self.scaler_path = scaler_path
        self.trainer = VulnerabilityModelTrainer()

    def run(self):
        """
        Executes the full ML pipeline:
        - Load data
        - Preprocess
        - Train models for severity and confidence
        - Save models and scaler
        """
        print("[*] Loading data...")
        data = pd.read_csv(self.data_path)

        print("[*] Loading into trainer...")
        self.trainer.load_data(data)

        print("[*] Preprocessing data...")
        self.trainer.preprocess()

        print("[*] Training models...")
        acc_sev, acc_conf = self.trainer.train()
        print(f"[+] Severity model accuracy: {acc_sev:.2f}")
        print(f"[+] Confidence model accuracy: {acc_conf:.2f}")

        print("[*] Saving models and scaler...")
        self.trainer.save(self.model_severity_path, self.model_confidence_path, self.scaler_path)
        print(f"[+] Models and scaler saved.")
